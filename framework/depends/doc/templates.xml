<?xml version="1.0" encoding="UTF-8"?><templates><template autoinsert="true" context="java-members" deleted="false" description="添加值对象" enabled="true" name="add">public static int add(${VOClass} vo) {&#13;
	//指定值对象类型(VOClass)。例子：User&#13;
	//指定插入表名称(tableName)。例子：如user表3个列，tableName=user(id, name, gender)&#13;
	//根据列的顺序获取值对象的属性值。例子：vo.getId(), vo.getName(), vo.getGender()&#13;
	return SimpleDaoTemplate.update(&#13;
			"INSERT INTO ${tableName} VALUES(?, ?, ?${})", &#13;
			${cursor}&#13;
	);&#13;
}</template><template autoinsert="true" context="java-members" deleted="false" description="编辑值对象" enabled="true" name="edit">public static int edit(${VOClass} vo) {&#13;
	//指定值对象类型(VOClass)。例子：User&#13;
	//指定插入表名称(tableName)。例子：如user表3个列，tableName=user&#13;
	//指定修改列信息(modify)。例子：name=?, value=?&#13;
	//根据修改列的顺序获取值对象的属性值。例子：vo.getName(), vo.getValue(), vo.getId()&#13;
	return SimpleDaoTemplate.update(&#13;
			"UPDATE ${tableName} SET ${modify} WHERE ${id} = ?", &#13;
			${cursor}&#13;
	);&#13;
}</template><template autoinsert="true" context="java-members" deleted="false" description="获得值对象" enabled="true" name="get">public static ${VOClass} get(String ${key}) {&#13;
	//指定值对象类型(VOClass)。例子VOClass=User&#13;
	//指定表主键(key)。例子:key=id&#13;
	//指定插入表名称(tableName)。例子：如user表，tableName=user&#13;
	//指定O-R映射规则对象。默认mapping&#13;
	return SimpleDaoTemplate.queryOne("SELECT * FROM ${tableName} WHERE 1 = 1",&#13;
				new DymaticCondition().addCondition("and ${key} = '?'", ${key}),&#13;
				${mapping}, ${VOClass}.class&#13;
	);&#13;
}</template><template autoinsert="true" context="java-members" deleted="false" description="获得符合条件的所有值对象" enabled="true" name="getAll">public static ListData&lt;${VOClass}&gt; getAll(${VOClass} vo, String start,&#13;
			String offset, String orderBy, String order) {&#13;
	//指定值对象类型(VOClass)。例子VOClass=User&#13;
	//指定插入表名称(tableName)。例子：如user表，tableName=user&#13;
	//指定O-R映射规则对象。默认mapping&#13;
	return SimpleDaoTemplate.query(&#13;
			"SELECT * FROM ${tableName} WHERE 1 = 1", new DymaticCondition()&#13;
			.addSimpleCondition(vo, ${simpeCondition})&#13;
			.addCondition("ORDER BY {0} {1}", orderBy, order),&#13;
			${mapping}, ${VOClass}.class, start, offset);&#13;
}</template><template autoinsert="true" context="java-members" deleted="false" description="删除值对象" enabled="true" name="remove">public static int remove(final String id) {&#13;
	//指定插入表名称(tableName)。例子：如user表，tableName=user&#13;
&#13;
	return SimpleDaoTemplate&#13;
			.update("DELETE FROM ${tableName} WHERE id = ?", id);&#13;
}</template><template autoinsert="true" context="java-members" deleted="false" description="修改值对象" enabled="true" name="update">public static int update(${VOClass} vo) {&#13;
	//指定值对象类型(VOClass)。例子：User&#13;
	//指定插入表名称。例子：如user表3个列，tableName=user(id, name, gender)&#13;
	//根据列的顺序获取值对象的属性值。例子：vo.getId(), vo.getName(), vo.getGender()&#13;
	return SimpleDaoTemplate.update(&#13;
			"INSERT INTO ${tableName} VALUES(?, ?, ?${})", &#13;
			${cursor}&#13;
	);&#13;
}</template></templates>